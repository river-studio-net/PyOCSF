name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Check if there is a parent commit
        id: check-parent-commit
        run: |
          echo "::set-output name=sha::$(git rev-parse --verify --quiet HEAD^)"

      - name: Detect and tag new version
        id: check-version
        if: steps.check-parent-commit.outputs.sha
        uses: salsify/action-detect-and-tag-new-version@v2.0.3
        with:
          version-command: |
            bash -o pipefail -c "uv version | awk '{ print \$2 }'"

      - name: Bump version for developmental release
        if: ! steps.check-version.outputs.tag
        run: |
          # For development releases, create a dev version with timestamp
          version=$(uv version | awk '{ print $2 }')
          dev_version="${version}.dev.$(date +%s)"
          # Update pyproject.toml directly
          sed -i "s/^version = .*/version = \"${dev_version}\"/" pyproject.toml

          # Verify the version was updated
          echo "Updated version in pyproject.toml:"
          grep "version = " pyproject.toml

      - name: Build package
        run: |
          rm -rf dist/
          uv build

      - name: Publish package on TestPyPI (Always)
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

      - name: Publish package on PyPI
        if: steps.check-version.outputs.tag
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}

      - name: Publish the release notes
        uses: release-drafter/release-drafter@v6.1.0
        with:
          publish: ${{ steps.check-version.outputs.tag != '' }}
          tag: ${{ steps.check-version.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
